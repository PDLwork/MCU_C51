C51 COMPILER V9.54   OLED                                                                  09/28/2021 02:35:11 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\Oled.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE Oled.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\Oled.lst) OBJECT(.\Objects\Oled.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "UserDef.H"
   3          #include "Oled.H"
   4          #include "I2C.H"
   5          
   6          const unsigned char code F6x8[][6] =            
   7          {
   8          0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// sp
   9          0x00, 0x00, 0x00, 0x2f, 0x00, 0x00,// !
  10          0x00, 0x00, 0x07, 0x00, 0x07, 0x00,// "
  11          0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14,// #
  12          0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12,// $
  13          0x00, 0x62, 0x64, 0x08, 0x13, 0x23,// %
  14          0x00, 0x36, 0x49, 0x55, 0x22, 0x50,// &
  15          0x00, 0x00, 0x05, 0x03, 0x00, 0x00,// '
  16          0x00, 0x00, 0x1c, 0x22, 0x41, 0x00,// (
  17          0x00, 0x00, 0x41, 0x22, 0x1c, 0x00,// )
  18          0x00, 0x14, 0x08, 0x3E, 0x08, 0x14,// *
  19          0x00, 0x08, 0x08, 0x3E, 0x08, 0x08,// +
  20          0x00, 0x00, 0x00, 0xA0, 0x60, 0x00,// ,
  21          0x00, 0x08, 0x08, 0x08, 0x08, 0x08,// -
  22          0x00, 0x00, 0x60, 0x60, 0x00, 0x00,// .
  23          0x00, 0x20, 0x10, 0x08, 0x04, 0x02,// /
  24          0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E,// 0
  25          0x00, 0x00, 0x42, 0x7F, 0x40, 0x00,// 1
  26          0x00, 0x42, 0x61, 0x51, 0x49, 0x46,// 2
  27          0x00, 0x21, 0x41, 0x45, 0x4B, 0x31,// 3
  28          0x00, 0x18, 0x14, 0x12, 0x7F, 0x10,// 4
  29          0x00, 0x27, 0x45, 0x45, 0x45, 0x39,// 5
  30          0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30,// 6
  31          0x00, 0x01, 0x71, 0x09, 0x05, 0x03,// 7
  32          0x00, 0x36, 0x49, 0x49, 0x49, 0x36,// 8
  33          0x00, 0x06, 0x49, 0x49, 0x29, 0x1E,// 9
  34          0x00, 0x00, 0x36, 0x36, 0x00, 0x00,// :
  35          0x00, 0x00, 0x56, 0x36, 0x00, 0x00,// ;
  36          0x00, 0x08, 0x14, 0x22, 0x41, 0x00,// <
  37          0x00, 0x14, 0x14, 0x14, 0x14, 0x14,// =
  38          0x00, 0x00, 0x41, 0x22, 0x14, 0x08,// >
  39          0x00, 0x02, 0x01, 0x51, 0x09, 0x06,// ?
  40          0x00, 0x32, 0x49, 0x59, 0x51, 0x3E,// @
  41          0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C,// A
  42          0x00, 0x7F, 0x49, 0x49, 0x49, 0x36,// B
  43          0x00, 0x3E, 0x41, 0x41, 0x41, 0x22,// C
  44          0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C,// D
  45          0x00, 0x7F, 0x49, 0x49, 0x49, 0x41,// E
  46          0x00, 0x7F, 0x09, 0x09, 0x09, 0x01,// F
  47          0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A,// G
  48          0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F,// H
  49          0x00, 0x00, 0x41, 0x7F, 0x41, 0x00,// I
  50          0x00, 0x20, 0x40, 0x41, 0x3F, 0x01,// J
  51          0x00, 0x7F, 0x08, 0x14, 0x22, 0x41,// K
  52          0x00, 0x7F, 0x40, 0x40, 0x40, 0x40,// L
  53          0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F,// M
  54          0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F,// N
C51 COMPILER V9.54   OLED                                                                  09/28/2021 02:35:11 PAGE 2   

  55          0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E,// O
  56          0x00, 0x7F, 0x09, 0x09, 0x09, 0x06,// P
  57          0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E,// Q
  58          0x00, 0x7F, 0x09, 0x19, 0x29, 0x46,// R
  59          0x00, 0x46, 0x49, 0x49, 0x49, 0x31,// S
  60          0x00, 0x01, 0x01, 0x7F, 0x01, 0x01,// T
  61          0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F,// U
  62          0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F,// V
  63          0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F,// W
  64          0x00, 0x63, 0x14, 0x08, 0x14, 0x63,// X
  65          0x00, 0x07, 0x08, 0x70, 0x08, 0x07,// Y
  66          0x00, 0x61, 0x51, 0x49, 0x45, 0x43,// Z
  67          0x00, 0x00, 0x7F, 0x41, 0x41, 0x00,// [
  68          0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55,// 55
  69          0x00, 0x00, 0x41, 0x41, 0x7F, 0x00,// ]
  70          0x00, 0x04, 0x02, 0x01, 0x02, 0x04,// ^
  71          0x00, 0x40, 0x40, 0x40, 0x40, 0x40,// _
  72          0x00, 0x00, 0x01, 0x02, 0x04, 0x00,// '
  73          0x00, 0x20, 0x54, 0x54, 0x54, 0x78,// a
  74          0x00, 0x7F, 0x48, 0x44, 0x44, 0x38,// b
  75          0x00, 0x38, 0x44, 0x44, 0x44, 0x20,// c
  76          0x00, 0x38, 0x44, 0x44, 0x48, 0x7F,// d
  77          0x00, 0x38, 0x54, 0x54, 0x54, 0x18,// e
  78          0x00, 0x08, 0x7E, 0x09, 0x01, 0x02,// f
  79          0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C,// g
  80          0x00, 0x7F, 0x08, 0x04, 0x04, 0x78,// h
  81          0x00, 0x00, 0x44, 0x7D, 0x40, 0x00,// i
  82          0x00, 0x40, 0x80, 0x84, 0x7D, 0x00,// j
  83          0x00, 0x7F, 0x10, 0x28, 0x44, 0x00,// k
  84          0x00, 0x00, 0x41, 0x7F, 0x40, 0x00,// l
  85          0x00, 0x7C, 0x04, 0x18, 0x04, 0x78,// m
  86          0x00, 0x7C, 0x08, 0x04, 0x04, 0x78,// n
  87          0x00, 0x38, 0x44, 0x44, 0x44, 0x38,// o
  88          0x00, 0xFC, 0x24, 0x24, 0x24, 0x18,// p
  89          0x00, 0x18, 0x24, 0x24, 0x18, 0xFC,// q
  90          0x00, 0x7C, 0x08, 0x04, 0x04, 0x08,// r
  91          0x00, 0x48, 0x54, 0x54, 0x54, 0x20,// s
  92          0x00, 0x04, 0x3F, 0x44, 0x40, 0x20,// t
  93          0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C,// u
  94          0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C,// v
  95          0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C,// w
  96          0x00, 0x44, 0x28, 0x10, 0x28, 0x44,// x
  97          0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C,// y
  98          0x00, 0x44, 0x64, 0x54, 0x4C, 0x44,// z
  99          0x14, 0x14, 0x14, 0x14, 0x14, 0x14,// horiz lines
 100          };
 101          
 102          static void Oled_WriteCommand(INT8U Oled_Command)
 103          {
 104   1              I2C_Start();
 105   1              I2C_SendByte(0x78);                     //发送从机地址 读写位R/W#=0  SA0=0
 106   1              I2C_ReceiveByte();
 107   1              I2C_SendByte(0x00);                     //write command  命令数据位D/C#=0;
 108   1              I2C_ReceiveByte();
 109   1              I2C_SendByte(Oled_Command);
 110   1              I2C_ReceiveByte();
 111   1              I2C_Stop();
 112   1      }
 113          
 114          static void Oled_WriteData(INT8U Oled_Data)
 115          {
 116   1              I2C_Start();
C51 COMPILER V9.54   OLED                                                                  09/28/2021 02:35:11 PAGE 3   

 117   1              I2C_SendByte(0x78);                     //发送从机地址 读写位R/W#=0  SA0=0
 118   1              I2C_ReceiveByte();
 119   1              I2C_SendByte(0x40);                     //writedata  命令数据位D/C#=1;
 120   1              I2C_ReceiveByte();
 121   1              I2C_SendByte(Oled_Data);
 122   1              I2C_ReceiveByte();
 123   1              I2C_Stop();
 124   1      }
 125          
 126          extern void Oled_Initialization(void)
 127          {
 128   1              Oled_WriteCommand(0xAE);//--display off
 129   1              Oled_WriteCommand(0x00);//---set low column address
 130   1              Oled_WriteCommand(0x10);//---set high column address
 131   1              Oled_WriteCommand(0x40);//--set start line address  
 132   1              Oled_WriteCommand(0xB0);//--set page address
 133   1              Oled_WriteCommand(0x81);// contract control
 134   1              Oled_WriteCommand(0xFF);//--128   
 135   1              Oled_WriteCommand(0xA1);//set segment remap 
 136   1              Oled_WriteCommand(0xA6);//--normal / reverse
 137   1              Oled_WriteCommand(0xA8);//--set multiplex ratio(1 to 64)
 138   1              Oled_WriteCommand(0x3F);//--1/32 duty
 139   1              Oled_WriteCommand(0xC8);//Com scan direction
 140   1              Oled_WriteCommand(0xD3);//-set display offset
 141   1              Oled_WriteCommand(0x00);//
 142   1              
 143   1              Oled_WriteCommand(0xD5);//set osc division
 144   1              Oled_WriteCommand(0x80);//
 145   1              
 146   1              Oled_WriteCommand(0xD8);//set area color mode off
 147   1              Oled_WriteCommand(0x05);//
 148   1              
 149   1              Oled_WriteCommand(0xD9);//Set Pre-Charge Period
 150   1              Oled_WriteCommand(0xF1);//
 151   1              
 152   1              Oled_WriteCommand(0xDA);//set com pin configuartion
 153   1              Oled_WriteCommand(0x12);//
 154   1              
 155   1              Oled_WriteCommand(0xDB);//set Vcomh
 156   1              Oled_WriteCommand(0x30);//
 157   1              
 158   1              Oled_WriteCommand(0x8D);//set charge pump enable
 159   1              Oled_WriteCommand(0x14);//
 160   1              
 161   1              Oled_WriteCommand(0xAF);//--turn on oled panel
 162   1      }
 163          
 164          static void Oled_SetPosition(INT8U X, Y)
 165          {
 166   1              Oled_WriteCommand(0xB0 + Y);
 167   1              Oled_WriteCommand(((X & 0xf0) >> 4) | 0x10);
 168   1              Oled_WriteCommand(X & 0x0f);
 169   1      }
 170          
 171          extern void Oled_ShowChar(INT8U X, Y, Oled_Char)
 172          {
 173   1              INT8U c, i;
 174   1              
 175   1              c = Oled_Char - ' ';//得到偏移后的值
 176   1              
 177   1              Oled_SetPosition(X, Y);
 178   1              
C51 COMPILER V9.54   OLED                                                                  09/28/2021 02:35:11 PAGE 4   

 179   1              for(i = 0; i < 6; i++)
 180   1                      Oled_WriteData(F6x8[c][i]);
 181   1              
 182   1      //              if(Char_Size ==16)
 183   1      //                      {
 184   1      //                      OLED_Set_Pos(x,y);      
 185   1      //                      for(i=0;i<8;i++)
 186   1      //                      OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 187   1      //                      OLED_Set_Pos(x,y+1);
 188   1      //                      for(i=0;i<8;i++)
 189   1      //                      OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 190   1      //                      }
 191   1      //                      else {  
 192   1      //                              OLED_Set_Pos(x,y);
 193   1      //                              for(i=0;i<6;i++)
 194   1      //                              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 195   1      //                              
 196   1      //                      }
 197   1      }
 198          
 199          extern void Oled_Clear(void)
 200          {
 201   1              INT8U i,j;
 202   1              for(i = 0; i < 8; i++)
 203   1              {
 204   2                      Oled_WriteCommand(0xB0 + i);
 205   2                      Oled_WriteCommand(0x00);
 206   2                      Oled_WriteCommand(0x10);
 207   2                      for(j = 0; j < 128; j++)
 208   2                              Oled_WriteData(0); 
 209   2              }
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =    552    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
