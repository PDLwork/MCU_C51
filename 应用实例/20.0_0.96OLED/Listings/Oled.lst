C51 COMPILER V9.54   OLED                                                                  09/28/2021 11:24:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\Oled.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE Oled.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\Oled.lst) OBJECT(.\Objects\Oled.obj)

line level    source

   1          //OLED的显存
   2          //存放格式如下.
   3          //[0]0 1 2 3 ... 127    
   4          //[1]0 1 2 3 ... 127    
   5          //[2]0 1 2 3 ... 127    
   6          //[3]0 1 2 3 ... 127    
   7          //[4]0 1 2 3 ... 127    
   8          //[5]0 1 2 3 ... 127    
   9          //[6]0 1 2 3 ... 127    
  10          //[7]0 1 2 3 ... 127
  11          
  12          #include <REGX52.H>
  13          #include "UserDef.H"
  14          #include "Oled.H"
  15          #include "I2C.H"
  16          #include "OledDefineCode.H"
  17          
  18          static void Oled_WriteCommand(INT8U Oled_Command)
  19          {
  20   1              I2C_Start();
  21   1              I2C_SendByte(0x78);                     //发送从机地址 读写位R/W#=0  SA0=0
  22   1              I2C_ReceiveAck();
  23   1              I2C_SendByte(0x00);                     //write command  命令数据位D/C#=0;
  24   1              I2C_ReceiveAck();
  25   1              I2C_SendByte(Oled_Command);
  26   1              I2C_ReceiveAck();
  27   1              I2C_Stop();
  28   1      }
  29          
  30          static void Oled_WriteData(INT8U Oled_Data)
  31          {
  32   1              I2C_Start();
  33   1              I2C_SendByte(0x78);                     //发送从机地址 读写位R/W#=0  SA0=0
  34   1              I2C_ReceiveAck();
  35   1              I2C_SendByte(0x40);                     //writedata  命令数据位D/C#=1;
  36   1              I2C_ReceiveAck();
  37   1              I2C_SendByte(Oled_Data);
  38   1              I2C_ReceiveAck();
  39   1              I2C_Stop();
  40   1      }
  41          
  42          extern void Oled_Initialization(void)
  43          {
  44   1              Oled_WriteCommand(0xAE);//--display off
  45   1              Oled_WriteCommand(0x00);//---set low column address
  46   1              Oled_WriteCommand(0x10);//---set high column address
  47   1              Oled_WriteCommand(0x40);//--set start line address  
  48   1              Oled_WriteCommand(0xB0);//--set page address
  49   1              Oled_WriteCommand(0x81);// contract control
  50   1              Oled_WriteCommand(0xFF);//--128   
  51   1              Oled_WriteCommand(0xA1);//set segment remap 
  52   1              Oled_WriteCommand(0xA6);//--normal / reverse
  53   1              Oled_WriteCommand(0xA8);//--set multiplex ratio(1 to 64)
  54   1              Oled_WriteCommand(0x3F);//--1/32 duty
C51 COMPILER V9.54   OLED                                                                  09/28/2021 11:24:47 PAGE 2   

  55   1              Oled_WriteCommand(0xC8);//Com scan direction
  56   1              Oled_WriteCommand(0xD3);//-set display offset
  57   1              Oled_WriteCommand(0x00);//
  58   1              
  59   1              Oled_WriteCommand(0xD5);//set osc division
  60   1              Oled_WriteCommand(0x80);//
  61   1              
  62   1              Oled_WriteCommand(0xD8);//set area color mode off
  63   1              Oled_WriteCommand(0x05);//
  64   1              
  65   1              Oled_WriteCommand(0xD9);//Set Pre-Charge Period
  66   1              Oled_WriteCommand(0xF1);//
  67   1              
  68   1              Oled_WriteCommand(0xDA);//set com pin configuartion
  69   1              Oled_WriteCommand(0x12);//
  70   1              
  71   1              Oled_WriteCommand(0xDB);//set Vcomh
  72   1              Oled_WriteCommand(0x30);//
  73   1              
  74   1              Oled_WriteCommand(0x8D);//set charge pump enable
  75   1              Oled_WriteCommand(0x14);//
  76   1              
  77   1              Oled_WriteCommand(0xAF);//--turn on oled panel
  78   1      }
  79          
  80          static void Oled_SetPosition(INT8U X, Y)
  81          {
  82   1              Oled_WriteCommand(0xB0 + Y);
  83   1              Oled_WriteCommand(((X & 0xf0) >> 4) | 0x10);
  84   1              Oled_WriteCommand(X & 0x0f);
  85   1      }
  86          
  87          extern void Oled_ShowChar(INT8U X, Y, Oled_Char)
  88          {
  89   1              INT8U OffsetAddress, i;
  90   1              
  91   1              OffsetAddress = Oled_Char - ' ';        //得到偏移后的值,空格为ASCⅡ码的初始位置
  92   1              
  93   1              Oled_SetPosition(X, Y);
  94   1              
  95   1              for(i = 0; i < 6; i++)
  96   1                      Oled_WriteData(ASC2Code6x8[OffsetAddress][i]);
  97   1              
  98   1      //              if(Char_Size ==16)
  99   1      //                      {
 100   1      //                      OLED_Set_Pos(x,y);      
 101   1      //                      for(i=0;i<8;i++)
 102   1      //                      OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 103   1      //                      OLED_Set_Pos(x,y+1);
 104   1      //                      for(i=0;i<8;i++)
 105   1      //                      OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 106   1      //                      }
 107   1      //                      else {  
 108   1      //                              OLED_Set_Pos(x,y);
 109   1      //                              for(i=0;i<6;i++)
 110   1      //                              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 111   1      //                              
 112   1      //                      }
 113   1      }
 114          
 115          extern void Oled_Clear(void)
 116          {
C51 COMPILER V9.54   OLED                                                                  09/28/2021 11:24:47 PAGE 3   

 117   1              INT8U i,j;
 118   1              for(i = 0; i < 8; i++)
 119   1              {
 120   2                      Oled_WriteCommand(0xB0 + i);
 121   2                      Oled_WriteCommand(0x00);
 122   2                      Oled_WriteCommand(0x10);
 123   2                      for(j = 0; j < 128; j++)
 124   2                              Oled_WriteData(0); 
 125   2              }
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =    552    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
