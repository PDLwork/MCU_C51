C51 COMPILER V9.54   INFRARED                                                              08/03/2021 22:41:18 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE INFRARED
OBJECT MODULE PLACED IN .\Objects\Infrared.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE Infrared.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\Infrared.lst) OBJECT(.\Objects\Infrared.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "UserDef.H"
   3          #include "Timer.H"
   4          #include "Int.H"
   5          #include "Infrared.H"
   6          
   7          bit Infrared_RepeatFlag, Infrared_DataFlag;
   8          INT8U Infrared_Command, Infrared_Address;
   9          
  10          extern void Infrared_Initialization(void)
  11          {
  12   1              Int0_Initialization();
  13   1              Timer0_Initialization();
  14   1      }
  15          
  16          void Int0_Routine(void) interrupt 0
  17          {
  18   1              INT16U Time_Length;
  19   1              static INT8U DataBit_Site = 0, Infrared_Data[] = {0, 0, 0, 0};
  20   1              static INT8U Infrared_State = 0;
  21   1              
  22   1              switch(Infrared_State)
  23   1              {
  24   2                      case 0:
  25   2                              Timer0_Run();
  26   2                              Infrared_State = 1;
  27   2                              break;
  28   2                      
  29   2                      case 1:
  30   2                              Time_Length = Timer0_GetCounter();
  31   2                              if( (Time_Length > (13500 - 500))  &&  (Time_Length < (13500 + 500)) )          //满足开始条件
  32   2                              {
  33   3                                      Infrared_State = 2;             //设置为开始接收模式 下个下降沿即开始接收数据
  34   3                                      Timer0_Run();
  35   3                              }
  36   2                              else if( (Time_Length > (11250 - 500))  &&  (Time_Length < (11250 + 500)) )     //满足重复发送条件
  37   2                              {
  38   3                                      Infrared_RepeatFlag = 1;
  39   3                                      Infrared_State = 0;
  40   3                              }
  41   2                              else
  42   2                                      Infrared_State = 0;             //不满足开始和重复条件，将模式重新设置为0
  43   2                              break;
  44   2                              
  45   2                      case 2:
  46   2                              Time_Length = Timer0_GetCounter();
  47   2                              Timer0_Run();
  48   2      
  49   2                              if( (Time_Length > (1120 - 500))  &&  (Time_Length < (1120 + 500)) )            //红外发送0
  50   2                              {
  51   3                                      Infrared_Data[DataBit_Site / 8] &= ~(0x01 << (DataBit_Site % 8));
  52   3                                      DataBit_Site++;
  53   3                              }
  54   2                              else if( (Time_Length > (2250 - 500))  &&  (Time_Length < (2250 + 500)) )               //红外发送1
C51 COMPILER V9.54   INFRARED                                                              08/03/2021 22:41:18 PAGE 2   

  55   2                              {
  56   3                                      Infrared_Data[DataBit_Site / 8] |= (0x01 << (DataBit_Site % 8));
  57   3                                      DataBit_Site++;
  58   3                              }
  59   2                              else
  60   2                              {
  61   3                                      DataBit_Site = 0; 
  62   3                                      Infrared_State = 0;             //不满足发0和发1的条件，将模式重新设置为0
  63   3                              }
  64   2                              
  65   2                              if(DataBit_Site >= 32)
  66   2                              {
  67   3                                      if((Infrared_Data[0] == ~Infrared_Data[1])  &&  (Infrared_Data[2] == ~Infrared_Data[3])) 
  68   3                                      {
  69   4                                              Infrared_DataFlag = 1;
  70   4                                              Infrared_Address = Infrared_Data[0];
  71   4                                              Infrared_Command = Infrared_Data[2];
  72   4                                      }
  73   3                                      DataBit_Site = 0;
  74   3                                      Infrared_State = 0;             //传输完32为数据，将模式重新设置为0
  75   3                              }
  76   2                              
  77   2                              break;
  78   2              }
  79   1      }
  80          
  81          void Timer0_Routine() interrupt 1
  82          {
  83   1              TR0 = 0;        //计数满之后关闭计数器，防止干扰导致程序进入中断
  84   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
